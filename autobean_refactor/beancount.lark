file: repeated{_file_directive}
?directive: option
          | include
          | plugin
          | pushtag
          | poptag
          | poptag
          | pushmeta
          | popmeta
          | balance
          | close
          | commodity
          | pad
          | event
          | query
          | price
          | note
          | document
          | open
          | custom
          | transaction
// TODO: avoid removing ignored parts when removing a directive.
file_ignored_: EOL | _INDENT EOL* _DEDENT
_file_directive: directive | file_ignored_
_comment_eol: maybe_left{INLINE_COMMENT} EOL
_leading_comment: maybe_right{NEVER}
_trailing_comment: maybe_left{NEVER}
eol_: EOL

// Labels
OPTION:       "option"
INCLUDE:      "include"
PLUGIN:       "plugin"
PUSHTAG:      "pushtag"
POPTAG:       "poptag"
PUSHMETA:     "pushmeta"
POPMETA:      "popmeta"
BALANCE:      "balance"
CLOSE:        "close"
COMMODITY:    "commodity"
PAD:          "pad"
EVENT:        "event"
QUERY:        "query"
PRICE:        "price"
NOTE:         "note"
DOCUMENT:     "document"
OPEN:         "open"
CUSTOM:       "custom"

// Directives
option:       _leading_comment OPTION ESCAPED_STRING ESCAPED_STRING _comment_eol _trailing_comment
include:      _leading_comment INCLUDE ESCAPED_STRING _comment_eol _trailing_comment
plugin:       _leading_comment PLUGIN ESCAPED_STRING maybe_left{ESCAPED_STRING} _comment_eol _trailing_comment
pushtag:      _leading_comment PUSHTAG TAG _comment_eol _trailing_comment
poptag:       _leading_comment POPTAG TAG _comment_eol _trailing_comment
pushmeta:     _leading_comment PUSHMETA META_KEY maybe_left{meta_value} _comment_eol _trailing_comment
popmeta:      _leading_comment POPMETA META_KEY _comment_eol _trailing_comment

// Entries
balance:      _leading_comment DATE BALANCE ACCOUNT number_expr maybe_left{tolerance} CURRENCY _comment_eol _meta_items _trailing_comment
close:        _leading_comment DATE CLOSE ACCOUNT _comment_eol _meta_items _trailing_comment
commodity:    _leading_comment DATE COMMODITY CURRENCY _comment_eol _meta_items _trailing_comment
pad:          _leading_comment DATE PAD ACCOUNT ACCOUNT _comment_eol _meta_items _trailing_comment
event:        _leading_comment DATE EVENT ESCAPED_STRING ESCAPED_STRING _comment_eol _meta_items _trailing_comment
query:        _leading_comment DATE QUERY ESCAPED_STRING ESCAPED_STRING _comment_eol _meta_items _trailing_comment
price:        _leading_comment DATE PRICE CURRENCY amount _comment_eol _meta_items _trailing_comment
note:         _leading_comment DATE NOTE ACCOUNT ESCAPED_STRING _comment_eol _meta_items _trailing_comment
document:     _leading_comment DATE DOCUMENT ACCOUNT ESCAPED_STRING repeated{_tag_or_link} _comment_eol _meta_items _trailing_comment
open:         _leading_comment DATE OPEN ACCOUNT repeated_sep{CURRENCY, _COMMA} maybe_left{ESCAPED_STRING} _comment_eol _meta_items _trailing_comment
custom:       _leading_comment DATE CUSTOM ESCAPED_STRING repeated{_custom_value} _comment_eol _meta_items _trailing_comment
transaction:  _leading_comment DATE TRANSACTION_FLAG  maybe_left{NEVER} maybe_left{ESCAPED_STRING} maybe_left{ESCAPED_STRING} repeated{_tag_or_link} _comment_eol _meta_items_or_postings _trailing_comment
_meta_items_or_postings: _INDENT repeated{meta_item} repeated{posting} _DEDENT | repeated{NEVER} repeated{NEVER} | _INDENT eol_+ repeated{NEVER} repeated{NEVER} _DEDENT

// Punctuations
WHITESPACE: /[ \t]+/
_NEWLINE: /\r*\n/
// Takes precedence over INLINE_COMMENT.
_NEWLINE_INDENT_COMMENT.10: (_NEWLINE | /\A/) (BLOCK_COMMENT | WHITESPACE) | _NEWLINE
INLINE_COMMENT: /;[^\r\n]*/s
BLOCK_COMMENT: /^/m INLINE_COMMENT (_NEWLINE INLINE_COMMENT)* | /^/m WHITESPACE INLINE_COMMENT (_NEWLINE WHITESPACE INLINE_COMMENT)*
_COMMA: ","

%declare EOL
%declare _INDENT
%declare _DEDENT
%declare INDENT
%ignore WHITESPACE
%ignore INDENT
%ignore _NEWLINE
%ignore INLINE_COMMENT
%ignore BLOCK_COMMENT

// String
ESCAPED_STRING : /".*?(?<!\\)(\\\\)*?"/s

// Account
// See: https://github.com/beancount/beancount/blob/e1716b492c7619682a6d7c33c4873aa41954af1e/beancount/parser/lexer.l#L129-L130
_NON_ASCII: /[^\x00-\x7f]/
_ACCOUNT_TYPE: (/[A-Z]/ | _NON_ASCII) (/[A-Za-z0-9\-]/ | _NON_ASCII)*
_ACCOUNT_NAME: (/[A-Z0-9]/ | _NON_ASCII) (/[A-Za-z0-9\-]/ | _NON_ASCII)*
ACCOUNT: _ACCOUNT_TYPE (":" _ACCOUNT_NAME)+

// Null
// This is called "NONE" in beancount grammar but we call it NULL to avoid collision with Python None.
// Takes precedence over CURRENCY.
NULL.10: "NULL"

// Bool
// Takes precedence over CURRENCY.
BOOL.10: "TRUE" | "FALSE"

// Date
// This is more strict than beancount grammar which allows 2000-123-456
// Takes precedence over NUMBER.
DATE.10: /[0-9]{4,}[-\/][0-9]{1,2}[-\/][0-9]{1,2}/

// Currency
_CURRENCY_BODY: /[A-Z0-9'._-]*/
CURRENCY: /[A-Z]/ _CURRENCY_BODY /[A-Z0-9]/
        | "/" _CURRENCY_BODY /[A-Z]/ [_CURRENCY_BODY /[A-Z0-9]/]

// Tag
TAG: /#[A-Za-z0-9-_\/.]+/

// Link
LINK: /\^[A-Za-z0-9-_\/.]+/

// Flag
// This is v2 syntax. v3 has a different syntax due to support of single-letter currency:
// (v3) FLAG: /[!&#?%]/ | /'[A-Z]/
// See: https://github.com/beancount/beancount/commit/d2d0a35e629408c9ce364eea5601839f8f582208
POSTING_FLAG: /[*!&#?%PSTCURM]/
TRANSACTION_FLAG: POSTING_FLAG | "txn"

// Number
NUMBER: (/([0-9]{1,3})(,[0-9]{3})+/ | /[0-9]+/) [/\.[0-9]*/]

// Arithmetic operators
UNARY_OP:     "+" | "-"
ADD_OP:       "+" | "-"
MUL_OP:       "*" | "/"
LEFT_PAREN:   "("
RIGHT_PAREN:  ")"

// Arithmetic expression
number_expr: number_add_expr
number_add_expr: number_mul_expr (ADD_OP number_mul_expr)*
number_mul_expr: number_atom_expr (MUL_OP number_atom_expr)*
?number_atom_expr: NUMBER | number_paren_expr | number_unary_expr
number_paren_expr: LEFT_PAREN number_add_expr RIGHT_PAREN
number_unary_expr: UNARY_OP number_atom_expr

// Amount
amount: number_expr CURRENCY

// MetaKey
// The beancount syntax matches the trailing colon with lookahead. We make it part of the key token itself to simplify
// testing and avoid whitespaces being inserted before the colon.
META_KEY: /[a-z][a-zA-Z0-9-_]+:/

// MetaValue
?meta_value: ESCAPED_STRING | ACCOUNT | DATE | CURRENCY | TAG | BOOL | NULL | number_expr | amount

// MetaItem
_meta_item: _leading_comment indent2 META_KEY maybe_left{meta_value} _comment_eol _trailing_comment
meta_item: _allow_direct_parse{_meta_item}
_meta_items: _INDENT repeated{meta_item} _DEDENT | repeated{NEVER} | _INDENT eol_+ repeated{NEVER} _DEDENT

// Tolerance
TILDE:        "~"
tolerance:    TILDE number_expr

// tags / links
_tag_or_link: TAG | LINK

// custom value
_custom_value: ESCAPED_STRING | DATE | BOOL | amount | number_expr | ACCOUNT

// posting
_partial_amount: maybe_left{number_expr} maybe_left{CURRENCY}
AT:                "@"
ATAT:              "@@"
unit_price: AT _partial_amount
total_price: ATAT _partial_amount
?price_annotation: unit_price | total_price
LEFT_BRACE:        "{"
RIGHT_BRACE:       "}"
DBL_LEFT_BRACE:    "{{"
DBL_RIGHT_BRACE:   "}}"
HASH:              "#"
ASTERISK:          "*"
compound_amount: maybe_right{number_expr} HASH maybe_left{number_expr} CURRENCY
?cost_component: DATE | ASTERISK | ESCAPED_STRING | CURRENCY | number_expr | amount | compound_amount
unit_cost: LEFT_BRACE repeated_sep{cost_component, _COMMA} RIGHT_BRACE
total_cost: DBL_LEFT_BRACE repeated_sep{cost_component, _COMMA} DBL_RIGHT_BRACE
cost_spec: unit_cost | total_cost
_posting: _leading_comment indent maybe_right{POSTING_FLAG} ACCOUNT _partial_amount maybe_left{cost_spec} maybe_left{price_annotation} _comment_eol repeated{meta_item} _trailing_comment
posting: _allow_direct_parse{_posting}

// [internal] Optional field wrapper
maybe_left{inner}: [inner]
maybe_right{inner}: [inner]

// [internal] Repeated field wrapper
repeated{inner}: (inner)*
repeated_sep{inner, sep}: inner? (sep inner)*

// [internal]
NEVER: /^_^/
NEVER2: NEVER
_allow_direct_parse{inner}: inner | _INDENT inner _DEDENT  // allow parse without parent model
indent: [NEVER]  // will be replaced by indent whitespace token
indent2: [NEVER2]  // work around grammar ambiguity detection as lark doesn't know this never matches
